snippet kv
	${1:key}: ${2:value}
snippet proto:m
	${1:class_name}.prototype.${2:method_name} = function(${3:params}) {
	    ${4:body}
	};
snippet :fn
	${1:name}: function(${2:params}) {
	    ${3:body}
	},
snippet retobj
	return {
	    ${1}
	};
snippet defdeps
	define('${1:module_id}',[${2:dependencies}], function(${3:params}) {

		var exports = {};
		${4}
		return exports;
	});
snippet def
	define('${1:module_id}', function() {

		var exports = {};
		${2}
		return exports;
	});
snippet req
	require('${1:name}');
snippet reqvar
	var ${1} = require('$1');
snippet reqcb
	require('${1:name}', function() {
	    ${3}
	});
snippet strict
	'use strict';
snippet closr
	(function() {
		${1:// code}
	})();
# qunit
snippet test
	test('${1:test_name}', function() {
		${2:// body}
	});
snippet equal
	equal(${1:actual_value}, ${2:expected_value}, ${3:message});
snippet iife
	(function(${1:params}) {
		${3:// body}
	}(${2:args}));
# jasmine
snippet describe
	describe('${1}', function() {
	    ${2}
	});
snippet it
	it('${1}', function() {
		${2}
	});
snippet beforeEach
	beforeEach(function() {
		${1}
	});
snippet afterEach
	afterEach(function() {
		${1}
	});
snippet jspy
	jasmine.createSpy('${1}');
snippet spy:new
	jasmine.createSpy('${1}') 
snippet spy:c
	${1:spy}.calls.count()
snippet spy:args
	${1:spy}.calls.argsFor(${2})
snippet toBeKind
	toEqual(jasmine.any(${1:type}))
# React
snippet jsx
	/** @jsx React.DOM */

snippet rclass
	React.createClass({
		render: function() {
			return (
				${1}
			);
		}
	});
snippet r:input
	React.DOM.input(${1})
snippet r:vlink
	valueLink={this.linkState('${1}')}
snippet cname
	className='${1}'
snippet inits
	getInitialState: function() {
	    return {
	        ${1}
	    };
	}
snippet defs
	getDefaultProps: function() {
	    return {
	        ${1}
	    };
	}
# Quartermaster
snippet rqm
	var QM = require('quartermaster');
snippet rqmobj
	var Objects = QM.Objects;
snippet rqmcol
	var Collections = QM.Collections;
snippet rqmarr
	var Arrays = QM.Arrays;
snippet getorelse
	Objects.getOrElse('${1:key}', ${2:else_value}, ${3:object});
